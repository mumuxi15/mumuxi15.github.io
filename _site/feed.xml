<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-03-29T13:14:13-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Penny Pan</title><subtitle>Have a good day ~ </subtitle><entry><title type="html">A Guide to Interpreting statsmodels summary table</title><link href="http://localhost:4000/sm-summary-table/" rel="alternate" type="text/html" title="A Guide to Interpreting statsmodels summary table" /><published>2023-12-23T00:00:00-05:00</published><updated>2023-12-23T00:00:00-05:00</updated><id>http://localhost:4000/sm%20summary%20table</id><content type="html" xml:base="http://localhost:4000/sm-summary-table/"><![CDATA[<p>In the realm of data science and machine learning, understanding statistical results is crucial for making informed decisions. One of the most commonly used packages data scientist encountered daily is statsmodel. Its summary table is a great tool to gain insights to understanding the relationship between explanatory variable and response variable. In this blog post, we’ll dive into how to interpret a Statsmodels summary table and extract meaningful insights from it.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">statsmodels.api</span> <span class="k">as</span> <span class="n">sm</span>
<span class="kn">import</span> <span class="n">statsmodels.formula.api</span> <span class="k">as</span> <span class="n">smf</span>
<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">pandas</span>
</code></pre></div></div>

<h3 id="what-is-a-statsmodels-summary-table">What is a Statsmodels Summary Table?</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">est</span>  <span class="o">=</span> <span class="n">sm</span><span class="p">.</span><span class="nc">OLS</span><span class="p">(</span><span class="n">y</span><span class="p">,</span> <span class="n">sm</span><span class="p">.</span><span class="nf">add_constant</span><span class="p">(</span><span class="n">X</span><span class="p">))</span>
<span class="n">res</span> <span class="o">=</span> <span class="n">est</span><span class="p">.</span><span class="nf">fit</span><span class="p">()</span>
<span class="nf">print</span><span class="p">(</span><span class="n">res</span><span class="p">.</span><span class="nf">summary</span><span class="p">())</span>


                            <span class="n">OLS</span> <span class="n">Regression</span> <span class="n">Results</span>                            
<span class="o">==============================================================================</span>
<span class="n">Dep</span><span class="p">.</span> <span class="n">Variable</span><span class="p">:</span>                      <span class="n">y</span>   <span class="n">R</span><span class="o">-</span><span class="n">squared</span><span class="p">:</span>                       <span class="mf">0.793</span>
<span class="n">Model</span><span class="p">:</span>                            <span class="n">OLS</span>   <span class="n">Adj</span><span class="p">.</span> <span class="n">R</span><span class="o">-</span><span class="n">squared</span><span class="p">:</span>                  <span class="mf">0.687</span>
<span class="n">Method</span><span class="p">:</span>                 <span class="n">Least</span> <span class="n">Squares</span>   <span class="n">F</span><span class="o">-</span><span class="n">statistic</span><span class="p">:</span>                 <span class="mf">7.686e+04</span>
<span class="n">Date</span><span class="p">:</span>                <span class="n">Mon</span><span class="p">,</span> <span class="mi">18</span> <span class="n">Dec</span> <span class="mi">2023</span>   <span class="nc">Prob </span><span class="p">(</span><span class="n">F</span><span class="o">-</span><span class="n">statistic</span><span class="p">):</span>                  <span class="mi">0</span>
<span class="n">Time</span><span class="p">:</span>                        <span class="mi">09</span><span class="p">:</span><span class="mi">29</span><span class="p">:</span><span class="mi">24</span>   <span class="n">Log</span><span class="o">-</span><span class="n">Likelihood</span><span class="p">:</span>                <span class="o">-</span><span class="mf">375.30</span>
<span class="n">No</span><span class="p">.</span> <span class="n">Observations</span><span class="p">:</span>                  <span class="mi">85</span>   <span class="n">AIC</span><span class="p">:</span>                             <span class="mf">764.6</span>
<span class="n">Df</span> <span class="n">Residuals</span><span class="p">:</span>                      <span class="mi">78</span>   <span class="n">BIC</span><span class="p">:</span>                             <span class="mf">781.7</span>
<span class="n">Df</span> <span class="n">Model</span><span class="p">:</span>                           <span class="mi">6</span>                                         
<span class="n">Covariance</span> <span class="n">Type</span><span class="p">:</span>            <span class="n">nonrobust</span>                                         
<span class="o">===============================================================================</span>
                  <span class="n">coef</span>    <span class="n">std</span> <span class="n">err</span>          <span class="n">t</span>      <span class="n">P</span><span class="o">&gt;|</span><span class="n">t</span><span class="o">|</span>      <span class="p">[</span><span class="mf">0.025</span>      <span class="mf">0.975</span><span class="p">]</span>
<span class="o">-------------------------------------------------------------------------------</span>
<span class="n">Intercept</span>      <span class="mf">38.6517</span>      <span class="mf">9.456</span>      <span class="mf">4.087</span>      <span class="mf">0.000</span>      <span class="mf">19.826</span>      <span class="mf">57.478</span>
<span class="n">Region</span><span class="p">[</span><span class="n">T</span><span class="p">.</span><span class="n">E</span><span class="p">]</span>   <span class="o">-</span><span class="mf">15.4278</span>      <span class="mf">9.727</span>     <span class="o">-</span><span class="mf">1.586</span>      <span class="mf">0.117</span>     <span class="o">-</span><span class="mf">34.793</span>       <span class="mf">3.938</span>
<span class="n">Region</span><span class="p">[</span><span class="n">T</span><span class="p">.</span><span class="n">N</span><span class="p">]</span>   <span class="o">-</span><span class="mf">10.0170</span>      <span class="mf">9.260</span>     <span class="o">-</span><span class="mf">1.082</span>      <span class="mf">0.283</span>     <span class="o">-</span><span class="mf">28.453</span>       <span class="mf">8.419</span>
<span class="n">Region</span><span class="p">[</span><span class="n">T</span><span class="p">.</span><span class="n">S</span><span class="p">]</span>    <span class="o">-</span><span class="mf">4.5483</span>      <span class="mf">7.279</span>     <span class="o">-</span><span class="mf">0.625</span>      <span class="mf">0.534</span>     <span class="o">-</span><span class="mf">19.039</span>       <span class="mf">9.943</span>
<span class="n">Region</span><span class="p">[</span><span class="n">T</span><span class="p">.</span><span class="n">W</span><span class="p">]</span>   <span class="o">-</span><span class="mf">10.0913</span>      <span class="mf">7.196</span>     <span class="o">-</span><span class="mf">1.402</span>      <span class="mf">0.165</span>     <span class="o">-</span><span class="mf">24.418</span>       <span class="mf">4.235</span>
<span class="n">Literacy</span>       <span class="o">-</span><span class="mf">0.1858</span>      <span class="mf">0.210</span>     <span class="o">-</span><span class="mf">0.886</span>      <span class="mf">0.378</span>      <span class="o">-</span><span class="mf">0.603</span>       <span class="mf">0.232</span>
<span class="n">Wealth</span>          <span class="mf">0.4515</span>      <span class="mf">0.103</span>      <span class="mf">4.390</span>      <span class="mf">0.000</span>       <span class="mf">0.247</span>       <span class="mf">0.656</span>
<span class="o">==============================================================================</span>
<span class="n">Omnibus</span><span class="p">:</span>                        <span class="mf">3.049</span>   <span class="n">Durbin</span><span class="o">-</span><span class="n">Watson</span><span class="p">:</span>                   <span class="mf">1.785</span>
<span class="nc">Prob</span><span class="p">(</span><span class="n">Omnibus</span><span class="p">):</span>                  <span class="mf">0.218</span>   <span class="n">Jarque</span><span class="o">-</span><span class="nc">Bera </span><span class="p">(</span><span class="n">JB</span><span class="p">):</span>                <span class="mf">2.694</span>
<span class="n">Skew</span><span class="p">:</span>                          <span class="o">-</span><span class="mf">0.340</span>   <span class="nc">Prob</span><span class="p">(</span><span class="n">JB</span><span class="p">):</span>                        <span class="mf">0.260</span>
<span class="n">Kurtosis</span><span class="p">:</span>                       <span class="mf">2.454</span>   <span class="n">Cond</span><span class="p">.</span> <span class="n">No</span><span class="p">.</span>                         <span class="mf">371.</span>
<span class="o">==============================================================================</span>

<span class="n">Notes</span> <span class="p">:</span>
<span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="n">Standard</span> <span class="n">Errors</span> <span class="n">assume</span> <span class="n">that</span> <span class="n">the</span> <span class="n">covariance</span> <span class="n">matrix</span> <span class="n">of</span> <span class="n">the</span> <span class="n">errors</span> <span class="ow">is</span> <span class="n">correctly</span> <span class="n">specified</span>
</code></pre></div></div>

<p>When you fit a statistical model using Statsmodels, such as linear regression, logistic regression, or any other supported model, you typically receive a summary of the model’s results, as shown above. This summary contains various statistical metrics, including coefficients, standard errors, p-values, confidence intervals, and more, depending on the type of model you’ve fitted. The table is divided into three sections.</p>

<ul>
  <li>Section I: general fitting of the models</li>
  <li>Section II: t value and p values - coefficients</li>
  <li>Section III: the shape of the distribution</li>
</ul>

<h4 id="section-i">Section I</h4>

<ol>
  <li>
    <p><strong>Number of observations:</strong> The number of data points used in the analysis.</p>
  </li>
  <li>
    <p><strong>Method</strong>: least square. Find the best line by minimizing the the sum of the squared errors.</p>

    <p><img src="https://d138zd1ktt9iqe.cloudfront.net/media/seo_landing_files/least-square-method-1-1650276785.png" alt="Least Square Method" width="50%" /></p>
  </li>
  <li>
    <p><strong>Degree of freedom</strong>: number of independent variables</p>
  </li>
  <li>
    <p><strong>Covariance Type</strong>: typically nonrobust, which means there is no elimination of data to calculate the covariance between features</p>
  </li>
  <li>
    <p><strong>R-squared:</strong>  One of the most important number in the table, also known as the coefficient of determination. R-squared represents the proportion of variance in the dependent variable that is explained by the independent variables. It ranges from 0 to 1, with higher values indicating a better fit. For example, 0.793 means the model explains 79.3% of the change in y variable</p>

\[\begin{equation}
 R^2 = 1-\dfrac{ \sum(y_i - \hat{y}_i)^2}{(y_i - \bar{y})^2}
 \end{equation}\]

    <p>y~i~ = observed values, ŷ= predicted values, ȳ =  mean of the observed values</p>
  </li>
  <li>
    <p><strong>Adj. R-squared:</strong> Similar to R-squared but it penalizes the addition of unnecessary predictors. Consequently, a diminished adjusted score may indicate that some variables are not contributing to your model’s R-squared.</p>
  </li>
  <li>
    <p><strong>F-statistic and Prob (F-statistic):</strong> The F-test indicates whether your linear regression model provides a better fit than a model with all parameters equal to zero. $H_0:\beta_1=\beta_2=⋯=\beta_i=0$  A small p-value (typically less than 0.05) indicates that the model as a whole is significant.</p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td><strong>Log-Likelihood</strong> <sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">1</a></sup>: The natural logarithm of the likelihood. The likelihood is a function that tells the probability of observing the data given the model parameters, it is a product of probability density functions 𝑓~𝜃~.  $L(𝜃</td>
          <td>𝑋)=∏_{𝑖=1}^𝑛𝑓_𝜃(𝑋_𝑖)$.   Log-likelihood values cannot be used alone as an index of fit because they are a function of sample size but can be used to compare the fit of different coefficients.</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li><strong>AIC and BIC</strong>: Akaike Information Criterion (AIC) and Bayesian Information Criterion (BIC) are both related to log-likelihood functions. They balance model complexity with goodness of fit, helping to prevent overfitting. Lower AIC or BIC values indicate better model fit, while taking into account the number of parameters in the model.</li>
</ol>

<h4 id="section-ii---coefficients">Section II - Coefficients</h4>

<ol>
  <li>
    <p><strong>Coefficients</strong> : In a classic linear formula $y = mx+\beta$​ , coefficients is our β</p>
  </li>
  <li>
    <p><strong>Std err:</strong> The standard error is the (estimated) standard deviation of the sampling distribution of 𝛽̂ $SE = \frac{\sigma}{\sqrt{n}}$    . The standard error quantifies the uncertainty or variability in this estimated coefficient. A smaller standard error indicates higher precision, meaning that the estimated coefficient is likely closer to the true population value.</p>
  </li>
  <li>
    <p><strong>t:</strong> The t-statistic, which tests the null hypothesis that the coefficient is equal to zero. Based on that test we may decide whether x is a useful (linear) predictor of y.</p>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>**P&gt;</td>
          <td>t</td>
          <td>:** Another important feature in the summary table. The p-value is associated with the t-statistic. A small p-value indicates that the coefficient is statistically significant.  A p-value of 0.05 or lower is generally considered statistically significant.</td>
        </tr>
      </tbody>
    </table>

    <p><img src="https://www.simplypsychology.org/wp-content/uploads/p-value.jpg" width="80%" /></p>
  </li>
  <li><strong>[0.025 0.975]:</strong> The 95% confidence interval for the coefficient. It provides a range of plausible values for the true coefficient.</li>
</ol>

<h4 id="section-iii---shape-of-distribution">Section III - Shape of distribution</h4>

<ol>
  <li>
    <p><strong>Omnibus, Prob(Omnibus):</strong> The Omnibus test measures the normality of the residuals with 0 meaning perfect, and the associated p-value (Prob(Omnibus)) indicates whether the test is statistically significant.</p>
  </li>
  <li>
    <p><strong>Durbin-Watson:</strong> It is a test to detect autocorrelations in the residuals. Its scale spans from 0 to 4, where values proximate to 2 signify an absence of autocorrelation, 0 indicates positive autocorrelation, and 4 implies negative autocorrelation. Autocorrelation occurs when the errors (residuals) of a regression model exhibit patterns with themselves at different lags, and the residuals are not independent of each other.  One common approach to visually assess autocorrelation is by plotting residual plots, as depicted in the accompanying images below.</p>

    <p><img src="https://www.reneshbedre.com/assets/posts/dw/auto_comb.webp?ezimgfmt=ng%3Awebp%2Fngcb2%2Frs%3Adevice%2Frscb2-2" alt="autocorrelation" /></p>
  </li>
  <li>
    <p><strong>Jarque-Bera (JB) and Prob(JB):</strong> Similar to the Omnibus test, the Jarque-Bera test evaluates the normality of the residuals. The p-value (Prob(JB)) indicates whether the test is statistically significant.</p>
  </li>
  <li>
    <p><strong>Skewness and Kurtosis:</strong> Skewness measures the asymmetry of the distribution and Kurtosis is a measure of whether the data are heavy-tailed or light-tailed relative to a normal distribution.</p>

    <p><img src="https://www.statisticalaid.com/wp-content/uploads/2021/01/skw.png" width="60%" /></p>
  </li>
</ol>

<h3 id="conclusion">Conclusion</h3>

<p>Interpreting a Statsmodels summary table requires a solid understanding of statistical concepts and an appreciation for the nuances of the model being analyzed. By carefully examining the coefficients, p-values, confidence intervals, and diagnostic statistics provided in the summary table, you can gain valuable insights into the relationships between variables and the overall performance of the model. However, it’s essential to remember that statistical analysis is not an exact science, and interpretation should always be accompanied by critical thinking and consideration of the context in which the analysis was conducted. With practice and experience, you can become proficient in interpreting Statsmodels summary tables and using them to inform data-driven decisions.</p>

<p>Happy modeling!</p>

<h4 id="reference">Reference</h4>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:2" role="doc-endnote">
      <p>https://www.statlect.com/glossary/log-likelihood  by Log-likelihoodby Marco Taboga  PhD. <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>penny</name></author><category term="featured" /><summary type="html"><![CDATA[In the realm of data science and machine learning, understanding statistical results is crucial for making informed decisions. One of the most commonly used packages data scientist encountered daily is statsmodel. Its summary table is a great tool to gain insights to understanding the relationship between explanatory variable and response variable. In this blog post, we’ll dive into how to interpret a Statsmodels summary table and extract meaningful insights from it.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.statsmodels.org/stable/_images/statsmodels-logo-v2-horizontal.svg" /><media:content medium="image" url="https://www.statsmodels.org/stable/_images/statsmodels-logo-v2-horizontal.svg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Optiver stock volatility prediction</title><link href="http://localhost:4000/Optiver-stock-volatility-prediction/" rel="alternate" type="text/html" title="Optiver stock volatility prediction" /><published>2022-05-12T00:00:00-04:00</published><updated>2022-05-12T00:00:00-04:00</updated><id>http://localhost:4000/Optiver%20stock%20volatility%20prediction</id><content type="html" xml:base="http://localhost:4000/Optiver-stock-volatility-prediction/"><![CDATA[<h5 id="project-description">Project description</h5>

<p>Optiver, a globally renowned high-frequency trading company, is organizing a Kaggle competition focused on discovering optimal volatility prediction models. The objective is to forecast short-term volatility for numerous stocks spanning various sectors. With access to millions of rows of detailed financial data, participants are challenged to anticipate volatility over 10-minute intervals. The performance of the models will be assessed using actual market data gathered during the three-month evaluation period following the training phase.</p>

<p><strong>Project Aim</strong></p>

<p>Predict the realized volatility for the next 10 minutes based on historical order book and transaction data for every 10-minute interval. The definition of realized volatility is as follows, where r is the log return of stock S.
\(\sigma=\sqrt{\sum_t {r_{t-1,t}}^2}\\
r_{t-1,t}=log(\dfrac{S_{t2}}{S_{t1}})\)
Optiver provided order book and trade data as book_train/test and train/test. The training dataset contains information from 3830 10-minute segments, which have been sampled from a total of 32767 10-minute segments across 112 stocks from 3 years historical trading data.  Sec stands for seconds_in_bucket.</p>

<ul>
  <li>
    <p>book_train：order book data</p>

    <table>
      <thead>
        <tr>
          <th>time_id</th>
          <th>sec*</th>
          <th>bid_price1</th>
          <th>ask_price1</th>
          <th>bid_price2</th>
          <th>ask_price2</th>
          <th>bid_size1</th>
          <th>ask_size1</th>
          <th>bid_size2</th>
          <th>ask_size2</th>
          <th>stock_id</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>5</td>
          <td>0</td>
          <td>1.001422</td>
          <td>1.002301</td>
          <td>1.00137</td>
          <td>1.002353</td>
          <td>3</td>
          <td>226</td>
          <td>2</td>
          <td>100</td>
          <td>0</td>
        </tr>
        <tr>
          <td>5</td>
          <td>1</td>
          <td>1.001422</td>
          <td>1.002301</td>
          <td>1.00137</td>
          <td>1.002353</td>
          <td>3</td>
          <td>100</td>
          <td>2</td>
          <td>100</td>
          <td>0</td>
        </tr>
        <tr>
          <td>5</td>
          <td>5</td>
          <td>1.001422</td>
          <td>1.002301</td>
          <td>1.00137</td>
          <td>1.002405</td>
          <td>3</td>
          <td>100</td>
          <td>2</td>
          <td>100</td>
          <td>0</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>Trade_train: trading data</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: left">time_id</th>
          <th style="text-align: left">sec*</th>
          <th style="text-align: left">price</th>
          <th style="text-align: left">size</th>
          <th style="text-align: left">order_count</th>
          <th>stock_id</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: left">5</td>
          <td style="text-align: left">21</td>
          <td style="text-align: left">1.002301</td>
          <td style="text-align: left">326</td>
          <td style="text-align: left">12</td>
          <td>0</td>
        </tr>
        <tr>
          <td style="text-align: left">5</td>
          <td style="text-align: left">46</td>
          <td style="text-align: left">1.002778</td>
          <td style="text-align: left">128</td>
          <td style="text-align: left">4</td>
          <td>0</td>
        </tr>
        <tr>
          <td style="text-align: left">5</td>
          <td style="text-align: left">50</td>
          <td style="text-align: left">1.002818</td>
          <td style="text-align: left">55</td>
          <td style="text-align: left">1</td>
          <td>0</td>
        </tr>
        <tr>
          <td style="text-align: left">5</td>
          <td style="text-align: left">57</td>
          <td style="text-align: left">1.003155</td>
          <td style="text-align: left">121</td>
          <td style="text-align: left">5</td>
          <td>0</td>
        </tr>
        <tr>
          <td style="text-align: left">5</td>
          <td style="text-align: left">68</td>
          <td style="text-align: left">1.003646</td>
          <td style="text-align: left">4</td>
          <td style="text-align: left">1</td>
          <td>0</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>train.csv：target is y_true</p>

    <table>
      <thead>
        <tr>
          <th>Stock_id</th>
          <th>time_id</th>
          <th>Target (σ)</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>9</td>
          <td>5</td>
          <td>0.007291</td>
        </tr>
        <tr>
          <td>9</td>
          <td>11</td>
          <td>0.002529</td>
        </tr>
        <tr>
          <td>9</td>
          <td>16</td>
          <td>0.003299</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<p>The main goal is to use 10 minutes of book data to predict the realized volatility of the next 10-minute window - target. When plotting bid_price1, bid_price2, ask_price1, and ask_price2, it becomes evident that throughout this 10-minute timeframe, the overarching trends of these four prices remain consistent. However, variations in price movements within specific intervals are noticeable</p>

<p float="left">
    <img src="/Users/mumuxi/Desktop/Projects/git/02-Data-Science-Project/21-Stock Volatility Prediction/order_book_price.png" /><img src="/Users/mumuxi/Desktop/Projects/git/02-Data-Science-Project/21-Stock Volatility Prediction/order_book_price_with_trade.png" /> <em>Figure 1 (top): Order book bid and ask prices of stock id 0 time id 5.</em></p>
<p><em>Figure 2 (bottom): Added real trade price</em></p>

<p>Let’s start with a basic understanding of order book first. It helps match the best available price in the market. Trades occur when a buyer’s bid matches a seller’s ask, leading to an agreement on the trade price.  For example, if an investor wants to purchase 20 shares of stock A, they would check the sell side of the order book to find sellers offering 221 shares at the lowest price $148. Therefore as we see in figure 2, trade price falls between bid and ask.</p>

<p><img src="https://www.optiver.com/wp-content/uploads/2021/05/OrderBook3.png" alt="order_book_1" /></p>

<p>In total, there are 112 stock ids and we randomly split into train and test with 4:1 ratio.</p>

<p>So the first step is to calculate the  realized volatility with the data given using formula (1). Because we have two bid prices and two ask prices, we can calculate two weighted average price wap1 and wap2.</p>

<h4 id="feature-engineering"><strong>Feature Engineering</strong></h4>

<hr />

<p>Feature engineering is quite important in this competition.</p>

<h4 id="future-improvements">Future Improvements</h4>

<hr />

<h4 id="conclusion">Conclusion</h4>

<hr />

<p>Reference</p>]]></content><author><name>penny</name></author><category term="featured" /><summary type="html"><![CDATA[Project description]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://newsroom.cisco.com/c/dam/r/newsroom/en/us/migrated-assets/amd-partner-innovation_800x450_thumb_031521-jpg-2146981-1-0.jpg" /><media:content medium="image" url="https://newsroom.cisco.com/c/dam/r/newsroom/en/us/migrated-assets/amd-partner-innovation_800x450_thumb_031521-jpg-2146981-1-0.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Building a Dynamic E-commerce Website for Small Businesses</title><link href="http://localhost:4000/Ecommerce/" rel="alternate" type="text/html" title="Building a Dynamic E-commerce Website for Small Businesses" /><published>2021-06-06T00:00:00-04:00</published><updated>2021-06-06T00:00:00-04:00</updated><id>http://localhost:4000/Ecommerce</id><content type="html" xml:base="http://localhost:4000/Ecommerce/"><![CDATA[<p>The ongoing COVID-19 pandemic has brought about a seismic shift in consumer behavior, driving an unprecedented surge in online shopping. With an increasing preference for online shopping over in-person experiences, small business owners find themselves presented with a unique opportunity to expand their customer base and boost revenue by establishing a robust e-commerce presence. In this blog post, we’ll explore the transformative potential of setting up a simple yet dynamic website with a database for small businesses. This strategic move not only enables businesses to adapt to the changing landscape but also empowers them to thrive in the digital world.</p>

<h4 id="1-plan-and-design-crafting-a-roadmap-to-success">1. Plan and Design: Crafting a Roadmap to Success</h4>

<p>Before diving into the development process, it’s crucial to meticulously plan and design your e-commerce platform. Small businesses need to outline their goals, target audience, and unique selling propositions. A well-thought-out plan ensures that the subsequent steps align with the business’s objectives, providing a roadmap for success. To be more specific, consider the features you want to incorporate, such as color themes, payment gateway integration, and more. Popular payment gateways like PayPal, Stripe, Braintree, and Square offer API access, allowing for seamless integration and backtesting.</p>

<h4 id="2-set-up-coding-environment">2. Set up coding environment</h4>

<p>Initiate your project by establishing a virtual environment using tools like virtualenv, helps to keep project dependencies organized and prevents conflicts between different projects. Additionally, it simplifies the process of transitioning projects to different laptops or computers and enables project reproduction across different devices. Once you have created a virtual environment, you can activate it by running the command.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>virtualenv -p python3 &lt;desired-path&gt;
source &lt;venv&gt;/bin/activate
</code></pre></div></div>

<h4 id="3-building-the-project">3. Building the project</h4>

<p>Building a shopping site involves a multifaceted approach that encompasses various aspects, from designing the front end for user interaction to implementing a robust backend and database system. The front end is what users see in their browsers, while the back end is responsible for fulfilling user requests on the server side. You can either design the layout and animations yourself using CSS and JavaScript or utilize tools like <a href="https://getbootstrap.com/docs/4.0/examples/">Bootstrap</a>, which expedites the front end creation of a page.</p>

<p>When it comes to the backend, Flask stands out as an excellent choice for beginners. Its user-friendly nature, coupled with examples readily available on platforms like GitHub, makes it an ideal starting point. The micro-framework of Flask offers flexibility, allowing businesses to tailor their web applications to meet specific project needs. You can have a website up and displaying “hello world!” within seconds by utilizing the following code.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">os</span>
<span class="kn">from</span> <span class="n">flask</span> <span class="kn">import</span> <span class="n">Flask</span>
<span class="k">def</span> <span class="nf">create_app</span><span class="p">(</span><span class="n">test_config</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
    <span class="c1"># create and configure the app
</span>    <span class="n">app</span> <span class="o">=</span> <span class="nc">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">,</span> <span class="n">instance_relative_config</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">app</span><span class="p">.</span><span class="n">config</span><span class="p">.</span><span class="nf">from_mapping</span><span class="p">(</span>
        <span class="n">SECRET_KEY</span><span class="o">=</span><span class="sh">'</span><span class="s">dev</span><span class="sh">'</span><span class="p">,</span>
        <span class="n">DATABASE</span><span class="o">=</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">app</span><span class="p">.</span><span class="n">instance_path</span><span class="p">,</span> <span class="sh">'</span><span class="s">flaskr.sqlite</span><span class="sh">'</span><span class="p">),</span>
    <span class="p">)</span>

    <span class="k">if</span> <span class="n">test_config</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
        <span class="c1"># load the instance config, if it exists, when not testing
</span>        <span class="n">app</span><span class="p">.</span><span class="n">config</span><span class="p">.</span><span class="nf">from_pyfile</span><span class="p">(</span><span class="sh">'</span><span class="s">config.py</span><span class="sh">'</span><span class="p">,</span> <span class="n">silent</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="c1"># load the test config if passed in
</span>        <span class="n">app</span><span class="p">.</span><span class="n">config</span><span class="p">.</span><span class="nf">from_mapping</span><span class="p">(</span><span class="n">test_config</span><span class="p">)</span>

    <span class="c1"># ensure the instance folder exists
</span>    <span class="k">try</span><span class="p">:</span>
        <span class="n">os</span><span class="p">.</span><span class="nf">makedirs</span><span class="p">(</span><span class="n">app</span><span class="p">.</span><span class="n">instance_path</span><span class="p">)</span>
    <span class="k">except</span> <span class="nb">OSError</span><span class="p">:</span>
        <span class="k">pass</span>

    <span class="c1"># a simple page that says hello
</span>    <span class="nd">@app.route</span><span class="p">(</span><span class="sh">'</span><span class="s">/hello</span><span class="sh">'</span><span class="p">)</span>
    <span class="k">def</span> <span class="nf">hello</span><span class="p">():</span>
        <span class="k">return</span> <span class="sh">'</span><span class="s">Hello, World!</span><span class="sh">'</span>

    <span class="k">return</span> <span class="n">app</span>
</code></pre></div></div>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>flask <span class="nt">--app</span> flaskr run <span class="nt">--debug</span>
</code></pre></div></div>

<p>The database is the backbone of a shopping site, storing valuable information such as product details, customer data, and transaction history. Ask yourself a few questions before start.</p>

<ol>
  <li><strong>Product Attributes:</strong>
    <ul>
      <li>What attributes of the product do we need to showcase to customers?</li>
      <li>Consider aspects like product images, descriptions, prices, and any other relevant details.</li>
    </ul>
  </li>
  <li><strong>Customer Information:</strong>
    <ul>
      <li>What information needs to be collected from customers?</li>
      <li>Think about user registration details, shipping addresses, and any additional data relevant to your business model.</li>
    </ul>
  </li>
</ol>

<p>Drawing a clear and concise database schema is a critical step in visualizing the data model and establishing relationships between different entities. A standard schema typically includes tables representing various aspects of your website. Consider the following example:</p>

<p><img src="https://live.staticflickr.com/65535/49641865616_3f95e3d78b_c.jpg" width="80%" /></p>

<p>In this example, the grey lines depict how tables are linked. Notice the “order_detail” table sharing a common key, “order_id,” with the “orders” table. This linkage allows for accurate tracking of inventory levels and updating product availability as items are sold. Taking the time to design a well-structured database schema sets the foundation for a robust and scalable shopping website.</p>

<p>Below is a simple example of a Flask application with a SQL database. In this example, we’ll create a basic shopping sites with products and orders.  SQLite is used for simplicity, but you can replace it with a more robust database like PostgreSQL or MySQL based on your needs.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">render_template</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="n">redirect</span><span class="p">,</span> <span class="n">url_for</span>
<span class="kn">from</span> <span class="n">flask_sqlalchemy</span> <span class="kn">import</span> <span class="n">SQLAlchemy</span>

<span class="n">app</span> <span class="o">=</span> <span class="nc">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
<span class="n">app</span><span class="p">.</span><span class="n">config</span><span class="p">[</span><span class="sh">'</span><span class="s">SQLALCHEMY_DATABASE_URI</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="sh">'</span><span class="s">sqlite:///shop.db</span><span class="sh">'</span>  <span class="c1"># Use SQLite for simplicity
</span><span class="n">db</span> <span class="o">=</span> <span class="nc">SQLAlchemy</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>

<span class="c1"># Define Product and Order models
</span><span class="k">class</span> <span class="nc">Product</span><span class="p">(</span><span class="n">db</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="nb">id</span> <span class="o">=</span> <span class="n">db</span><span class="p">.</span><span class="nc">Column</span><span class="p">(</span><span class="n">db</span><span class="p">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">name</span> <span class="o">=</span> <span class="n">db</span><span class="p">.</span><span class="nc">Column</span><span class="p">(</span><span class="n">db</span><span class="p">.</span><span class="nc">String</span><span class="p">(</span><span class="mi">255</span><span class="p">),</span> <span class="n">nullable</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="n">price</span> <span class="o">=</span> <span class="n">db</span><span class="p">.</span><span class="nc">Column</span><span class="p">(</span><span class="n">db</span><span class="p">.</span><span class="n">Float</span><span class="p">,</span> <span class="n">nullable</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Order</span><span class="p">(</span><span class="n">db</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="nb">id</span> <span class="o">=</span> <span class="n">db</span><span class="p">.</span><span class="nc">Column</span><span class="p">(</span><span class="n">db</span><span class="p">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">product_id</span> <span class="o">=</span> <span class="n">db</span><span class="p">.</span><span class="nc">Column</span><span class="p">(</span><span class="n">db</span><span class="p">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">db</span><span class="p">.</span><span class="nc">ForeignKey</span><span class="p">(</span><span class="sh">'</span><span class="s">product.id</span><span class="sh">'</span><span class="p">),</span> <span class="n">nullable</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="n">quantity</span> <span class="o">=</span> <span class="n">db</span><span class="p">.</span><span class="nc">Column</span><span class="p">(</span><span class="n">db</span><span class="p">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">nullable</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div>

<p>Reference:</p>

<p><a href="https://flask-login.readthedocs.io/en/latest/">Flask-login document</a></p>

<p><a href="https://github.com/pallets/flask/tree/master/examples/tutorial/flaskr/">Flask-login github demo</a></p>

<p><a href="https://hackersandslackers.com/flask-blueprints/">Organzing Flask Apps with Blueprints</a></p>

<p>As the website expands, consider enhancing the user experience with additional features and functionalities. Integration of payment gateways, search functionality, product reviews, wish lists, and social media integration can significantly boost user engagement and drive sales. Flask’s modular design and scalability allow you to seamlessly incorporate these features. Online tutorials from reputable sources, such as PayPal’s official guide on integrating PayPal Checkout for online payments, and various programming tutorials on building a shopping cart using JavaScript, provide valuable resources for developers.</p>

<p>Reference:</p>

<p><a href="https://developer.paypal.com/docs/checkout/standard/integrate/">Paypal integration</a></p>

<p><a href="https://www.youtube.com/watch?v=1Q74A6ZQxdY&amp;list=PLoN_ejT35AEhzNoPStBzAkpqAu3YQwPj7">JavaScript Shopping Cart Tutorial</a></p>

<h4 id="4-testing">4. Testing</h4>

<p>Testing is a crucial phase in website development, involving various tests like unit tests, integration tests, and end-to-end tests to verify different components’ functionality. Frameworks like Pytest and <a href="https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-vii-unit-testing-legacy">unittest</a> can be employed for testing purposes, and debugging is essential to ensure smooth website functionality.</p>

<h4 id="5-deploy">5. Deploy</h4>

<p>Once testing is complete, the next step is to deployment. Hosting services like Heroku, AWS, and Google Cloud Platform provide platforms for deploying websites. You will need to configure the hosting environment, set up the database and server, and deploy your code to the server. It’s also vital to consider factors like scalability, security, and availability during deployment. I used pythoneverywhere.com to host my website. It is affordable and Python friendly. With a paid account, you can host up to three web applications for $5 per month.</p>

<p>Security is paramount when handling sensitive customer information. It is our responsibility to protect user information from potential hackers and other security threats. An essential key is to use encryption to protect the data when transmitted between client and server. First, you’ll need to obtain an SSL (Secure Sockets Layer) certificate, which verifies the identity of your website and encrypts all data transmitted between the server and the client. You can obtain a SSL certificate from a trusted certificate authority such as Let’s Encrypt (FREE !!!) Once you have the certificate, configure the web server to use HTTPS instead of HTTP. HTTPS is a secure version of the HTTP protocol that encrypts all data transmitted between the client and server.</p>

<p>In addition to using encryption, you should also take other security measures such as regularly updating your software and plugins, using strong passwords, and implementing measures such as two-factor authentication to protect your website from potential threats. It’s also a good idea to regularly back up your website to protect against data loss in the event of a security breach or other issue.</p>

<h4 id="6-google-search">6. Google Search</h4>

<p>Ensuring visibility on Google search results is pivotal for the success of your website. Google Search Console provides tools for verification and indexing. Purchasing a domain name, completing DNS verification, and submitting the index request are steps to ensure visibility in Google search results.</p>

<ol>
  <li>
    <p>Verify the domain on google search console. You can open the console by typing in google</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>site:xxx.com
</code></pre></div>    </div>
  </li>
  <li>
    <p>Complete the DNS verification as google requested</p>
  </li>
  <li>
    <p>Buy a domain name.</p>
  </li>
  <li>
    <p>Edit CNAME record in the DNS manage section. Here I used goDaddy as an example.</p>
  </li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>host: www
points to: yourwebsitename.com
</code></pre></div></div>

<ol>
  <li>Then go back to google console, search for your url in the URL inspection section and submit the index request. Google will perform several test on the website and if passed, you will receive a confirmation email from google.</li>
</ol>

<p>In conclusion, Flask proves to be a flexible and lightweight web framework that simplifies database integration and offers built-in features for creating dynamic websites. By following a comprehensive development and deployment process, you can build a secure, feature-rich shopping site that meets user needs and stands out in the competitive online marketplace.</p>]]></content><author><name>penny</name></author><summary type="html"><![CDATA[The ongoing COVID-19 pandemic has brought about a seismic shift in consumer behavior, driving an unprecedented surge in online shopping. With an increasing preference for online shopping over in-person experiences, small business owners find themselves presented with a unique opportunity to expand their customer base and boost revenue by establishing a robust e-commerce presence. In this blog post, we’ll explore the transformative potential of setting up a simple yet dynamic website with a database for small businesses. This strategic move not only enables businesses to adapt to the changing landscape but also empowers them to thrive in the digital world.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://images.businessnewsdaily.com/app/uploads/2022/04/04073619/how-ecommerce-works.png" /><media:content medium="image" url="https://images.businessnewsdaily.com/app/uploads/2022/04/04073619/how-ecommerce-works.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Coronavirus Data Analysis</title><link href="http://localhost:4000/covid/" rel="alternate" type="text/html" title="Coronavirus Data Analysis" /><published>2020-03-14T00:00:00-04:00</published><updated>2020-03-14T00:00:00-04:00</updated><id>http://localhost:4000/covid</id><content type="html" xml:base="http://localhost:4000/covid/"><![CDATA[<p>Subtitle: COVID19 Spread SIR Model Simulation using Python</p>

<p>Since the President declared a national emergency concerning the coronavirus disease, the world has been thrust into an unprecedented era marked by widespread uncertainty and profound challenges. The global response to the COVID-19 pandemic has emphasized the critical need for predictive models to understand and mitigate the spread of infectious diseases.</p>

<p>The Susceptible-Infected-Recovered (SIR) model is commonly used in epidemiology to understand and predict the spread of infectious diseases within a population.</p>

<p>In this context, the Susceptible-Infected-Recovered (SIR) model has emerged as a valuable tool in epidemiological research, offering insights into the dynamics of contagion within populations.</p>

<p>Since the President declared a national emergency concerning the coronavirus disease, several months have been passed since the start of quarantine. The spread of COVID 19 seems going worse as more and more colleagues and friends are getting sick.</p>

<p>In this time huge changes have occurred since I first started this blog in early February. My initial goal was to create a source that would collect total number of cases worldwide since the most updated information was not easily available to the public. However, the current situation has now changed, and there are more reliable resources that are documenting the spread of COVID-19 and disseminating the research in clear graphs. However, if you like to try my code, I have presented it below (output is in json format).</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">predict</span><span class="p">(</span><span class="n">c</span><span class="p">):</span>
	<span class="n">post_url</span> <span class="o">=</span> <span class="sh">"</span><span class="s">https://covid19.who.int/page-data/region/wpro/country/cn/page-data.json</span><span class="sh">"</span>
	<span class="k">try</span><span class="p">:</span>
		<span class="n">res</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">post_url</span><span class="p">,</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
		<span class="n">status_code</span> <span class="o">=</span> <span class="n">res</span><span class="p">.</span><span class="n">status_code</span>
	<span class="k">except</span> <span class="n">re</span><span class="p">.</span><span class="n">exceptions</span><span class="p">.</span><span class="nb">ConnectionError</span><span class="p">:</span>
		<span class="n">status_code</span> <span class="o">=</span> <span class="sh">'</span><span class="s">CONNECTION ERROR</span><span class="sh">'</span>
	<span class="k">if</span> <span class="n">status_code</span> <span class="o">!=</span> <span class="mi">200</span><span class="p">:</span>
		<span class="nf">print </span><span class="p">(</span><span class="sh">'</span><span class="s">___</span><span class="sh">'</span><span class="o">*</span><span class="mi">20</span><span class="p">,</span> <span class="n">status_code</span><span class="p">)</span>
		<span class="k">return</span> <span class="sh">'</span><span class="s">STATUS ERROR</span><span class="sh">'</span>
	
	<span class="n">json_data</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="nf">loads</span><span class="p">(</span><span class="n">res</span><span class="p">.</span><span class="nf">json</span><span class="p">()[</span><span class="sh">'</span><span class="s">result</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">data</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">countryGroup</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">data</span><span class="sh">'</span><span class="p">])</span>
	<span class="n">cols</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">date</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">_</span><span class="sh">'</span><span class="p">]</span><span class="o">+</span><span class="p">[</span><span class="n">x</span><span class="p">[</span><span class="sh">'</span><span class="s">name</span><span class="sh">'</span><span class="p">]</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">json_data</span><span class="p">[</span><span class="sh">'</span><span class="s">metrics</span><span class="sh">'</span><span class="p">]]</span>
	<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">json_data</span><span class="p">[</span><span class="sh">'</span><span class="s">rows</span><span class="sh">'</span><span class="p">],</span> <span class="n">columns</span><span class="o">=</span><span class="n">cols</span><span class="p">)</span>
	<span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">date</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">date</span><span class="sh">'</span><span class="p">],</span><span class="n">utc</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span><span class="n">unit</span><span class="o">=</span><span class="sh">'</span><span class="s">ms</span><span class="sh">'</span><span class="p">).</span><span class="n">dt</span><span class="p">.</span><span class="n">date</span>
	<span class="n">df</span><span class="p">.</span><span class="nf">drop</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="sh">'</span><span class="s">_</span><span class="sh">'</span><span class="p">],</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>	
<span class="c1">#	print (df.describe().T) 
#	print (df.loc[df['Deaths']&lt;0]) # abnormal data neg daily death 
</span>	<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">Deaths</span><span class="sh">'</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">]</span>
	<span class="nf">print </span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
 
<span class="nf">predict</span><span class="p">(</span><span class="n">c</span><span class="o">=</span><span class="sh">'</span><span class="s">china</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="https://media.licdn.com/dms/image/C4D12AQHYhvRt4Uvx4w/article-inline_image-shrink_1500_2232/0/1585841101969?e=1686182400&amp;v=beta&amp;t=ZbDvR8lghy1WX-asXAbBmCO7YPrBzVquecINlbjaB7s" /></p>

<p><img src="https://media.licdn.com/dms/image/C4D12AQFkpvj32zpmlg/article-inline_image-shrink_1000_1488/0/1585841113925?e=1686182400&amp;v=beta&amp;t=7G-Rh-lIOyXqSLiGnuz4jDi9VXNflaIzard356vus8Q" /></p>

<p>Although the situation with the coronavirus seems to be under control in China, the number of individuals infected in the US is rapidly increasing. As of March 31st 2020, the confirmed cases in the US reached around 188,530 and some officials are predicting that the number of deaths may reach up to 240,000.</p>

<p><img src="https://media.licdn.com/dms/image/C4E12AQFMq3auItOSeA/article-inline_image-shrink_1000_1488/0/1585839808611?e=1686182400&amp;v=beta&amp;t=V6fHTzkIhoSSxyiZrPQyNdZm709QP9TE-p50OLIF9xo" width="800" alt="corona_tot" /></p>

<p>Figure 1 (a). Total confirmed cases in US, China, Italy                                             (b). Log scale</p>

<p>In Figure 1, we can observe the progression of the coronavirus outbreak in three countries, each in a different phase. China has managed to control the spread of the virus, with the number of cases stabilizing after day 30. Italy’s rate of infection has slowed down and could potentially follow China’s trend (as indicated by the green line). In the US, we are still in the midst of a growing phase, but there is a glimmer of hope as further calculations suggest a possible slowdown (as indicated by the tip of the blue line). Figure 1b, which uses a log scale, demonstrates that the US and China have a higher infection rate due to their high population density. The slope of the graph in Figure 1b is calculated every 14 days using linear regression, and is obtained by breaking the data into smaller sections and taking the maximum slope.</p>

<h4 id="analysis"><strong>Analysis</strong></h4>

<p>Figure 1(a) shows that US data (blue line) probably follows an exponential trend ain the early stage, as also shown in the log Figure 1(b). Whereas, the green curve (China) looks more like a sigmoid function. So let’s first try to predict the infection population <strong>I(t)</strong> with a simple exponential model, defining <strong>I</strong> as infection population with an assumption that each patient infects <strong>A</strong> number of new people every day. This can be tested by by plotting log(y) against t - Figure 1(b):</p>

\[\begin{equation}
I = I_{0}\times A^{t}
\end{equation}\]

<p>where t is number of days since \(I_{0}\) cases.</p>

<p>This model only fits the blue line, and does not fit the trend of the yellow or green line at later stage. After doing some research on spread of infectious diseases, it seems an SIR-model might be a better model. The model consists of three parts: infected population, susceptible population and recovered/immune population. As I am trying to model the total of confirmed cases, not the active cases, for simplicity I will I can drop the recovery aspect of the model. This greatly simplifies the math, allowing to simply solve an ordinary differential equation. To further simplify this, let’s define population as 1 and <strong>I(t)</strong> is the percentage of population that is infected and <strong>S(t)</strong> is the proportion of susceptible population. Then we get:</p>

\[\begin{equation} 
S(t)+I(t) = 1
\end{equation}\]

<p>Define \(\beta\)  as  <strong>transmission rate</strong>. Upon further reflection, the rate of infection should be affected by both infection and susceptible population.  To consider two extreme cases,</p>

<ul>
  <li>when s = 1 , i = 0, the transmission rate, β = 0</li>
  <li>when s = 0 , i = 1, everyone is infected and no more new cases, β=0</li>
</ul>

<p>If we divide both side by \(\delta t\), we can get:</p>

\[\frac{dI}{dt} = - \frac{dS}{dt} = \beta S I\]

<p>This is equation is an ODE function, and we can solve it using scipy package.</p>

<p>In fact, turns out that this function 
\(\begin{equation}
\frac{dI}{dt} = \beta I \cdot (1-I)
\end{equation}\)</p>

<p>is the derivate of sigmoid function</p>

\[\begin{equation}
I = \frac{1}{1+e^{-t}}
\end{equation}\]

<h4 id="prediction-using-sigmoid-function"><strong>Prediction using sigmoid function</strong></h4>

<p>The model predicts the total confirmed cases next 30 days. For example, given data on March 1st, the model estimates about 172172 confirmed cases in Italy at the end of April.</p>

<p>Thanks for reading !</p>]]></content><author><name>penny</name></author><category term="data scraping" /><category term="statistical modelling" /><category term="featured" /><summary type="html"><![CDATA[Subtitle: COVID19 Spread SIR Model Simulation using Python]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://safeharborsc.imgix.net/adobestock-339124602-converted-1731501992.png" /><media:content medium="image" url="https://safeharborsc.imgix.net/adobestock-339124602-converted-1731501992.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Anime Recommender</title><link href="http://localhost:4000/anime_recommender/" rel="alternate" type="text/html" title="Anime Recommender" /><published>2019-05-28T00:00:00-04:00</published><updated>2019-05-28T00:00:00-04:00</updated><id>http://localhost:4000/anime_recommender</id><content type="html" xml:base="http://localhost:4000/anime_recommender/"><![CDATA[<p>In recent years, anime has become increasingly popular worldwide, and the number of anime available online  has grown exponentially. With so many options to choose from, it can be challenging to select the perfect one to suit their unique tastes. To address this issue, machine learning techniques has been used to develop personalized anime recommendation systems. By analyzing an individual’s viewing history and preferences, these systems can suggest anime titles that are more likely to appeal to them, based on factors such as genre, themes, and style. In this way, anime fans can discover new shows that are tailored to their specific interests, and spend less time searching. This article explores the use of machine learning in anime recommendation systems and discusses how they can enhance the anime viewing experience.</p>

<p>The process began by gathering data from MyAnimeList, a website dedicated to anime similar to IMDb. Over 5000 anime titles and user profiles were collected using Scrapy, Beautiful-soup and stored as JSON objects in MongoDB. The collected information includes names, descriptions, directors, vocal casts, theme songs, reviews, and more. Below is an example demonstrating the format of the collected data.</p>

<p>Examples of data stored in MangoDB.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="err">'_id':</span><span class="w"> </span><span class="err">'Yaiba'</span><span class="p">,</span><span class="w">
 </span><span class="err">'themesongs':</span><span class="w"> </span><span class="p">[[</span><span class="err">'</span><span class="s2">"Yuuki ga Areba (勇気があれば)"</span><span class="w"> </span><span class="err">by</span><span class="w"> </span><span class="err">Kabuki</span><span class="w"> </span><span class="err">Rocks</span><span class="w"> </span><span class="err">(カブキロックス)'</span><span class="p">,</span><span class="w">
   </span><span class="err">'</span><span class="s2">"Shinchigakunaki Tatakai! (神智学無き戦い!)"</span><span class="w"> </span><span class="err">by</span><span class="w"> </span><span class="err">Kabuki</span><span class="w"> </span><span class="err">Rocks</span><span class="w"> </span><span class="err">(カブキロックス)'</span><span class="p">]],</span><span class="w">
 </span><span class="err">'description':</span><span class="w"> </span><span class="p">[</span><span class="s2">"Kurogane Yaiba is a boy who doesn't want to become what any regular kid would: A samurai. That's why he undergoes a hard training with his father, knowing only the forest as his world. Then, one day, he is sent to Japan, where he has to deal with a whole new civilized reality, meeting the Mine family, the evil Onimaru and even the legendary Musashi, having lots of dangerous adventures, becoming stronger everyday.(Source: ANN, edited) "</span><span class="p">],</span><span class="w">
 </span><span class="err">'reviews':</span><span class="w"> </span><span class="p">[</span><span class="err">'which</span><span class="w"> </span><span class="err">are</span><span class="w"> </span><span class="err">really</span><span class="w"> </span><span class="err">stupid</span><span class="w"> </span><span class="err">but</span><span class="w"> </span><span class="err">it</span><span class="w"> </span><span class="err">all</span><span class="w"> </span><span class="err">succeds</span><span class="w"> </span><span class="err">in</span><span class="w"> </span><span class="err">tickling</span><span class="w"> </span><span class="err">us!!the</span><span class="w"> </span><span class="err">storycharacter</span><span class="w"> </span><span class="err">and</span><span class="w"> </span><span class="err">enjoyment</span><span class="w"> </span><span class="err">is</span><span class="w"> </span><span class="err">quite</span><span class="w"> </span><span class="err">okwell</span><span class="w"> </span><span class="err">i</span><span class="w"> </span><span class="err">personally</span><span class="w"> </span><span class="err">disliked</span><span class="w"> </span><span class="err">the</span><span class="w"> </span><span class="err">op</span><span class="w"> </span><span class="err">and</span><span class="w"> </span><span class="err">ed</span><span class="w"> </span><span class="err">and</span><span class="w"> </span><span class="err">art</span><span class="w"> </span><span class="err">also</span><span class="w"> </span><span class="err">seems</span><span class="w"> </span><span class="err">quite</span><span class="w"> </span><span class="err">ok</span><span class="w"> </span><span class="p">{</span><span class="err">not</span><span class="w"> </span><span class="err">many</span><span class="w"> </span><span class="err">cute</span><span class="w"> </span><span class="err">girls</span><span class="w"> </span><span class="err">:(</span><span class="w"> </span><span class="p">}</span><span class="err">its</span><span class="w"> </span><span class="err">a</span><span class="w"> </span><span class="err">lot</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">fun</span><span class="w"> </span><span class="err">overall</span><span class="w"> </span><span class="err">the</span><span class="w"> </span><span class="err">series</span><span class="w"> </span><span class="err">i</span><span class="w"> </span><span class="err">ll</span><span class="w"> </span><span class="err">definately</span><span class="w"> </span><span class="err">say</span><span class="w"> </span><span class="err">give</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="err">shot</span><span class="w"> </span><span class="err">only</span><span class="w"> </span><span class="err">to</span><span class="w"> </span><span class="err">the</span><span class="w"> </span><span class="mi">1</span><span class="err">st</span><span class="w"> </span><span class="err">epi!!!ull</span><span class="w"> </span><span class="err">automatically</span><span class="w"> </span><span class="err">get</span><span class="w"> </span><span class="err">hooked</span><span class="w"> </span><span class="err">to</span><span class="w"> </span><span class="err">the</span><span class="w"> </span><span class="err">series</span><span class="w"> </span><span class="err">atleast</span><span class="w"> </span><span class="err">i</span><span class="w"> </span><span class="err">did</span><span class="w"> </span><span class="err">!well</span><span class="w"> </span><span class="err">i</span><span class="w"> </span><span class="err">hope</span><span class="w"> </span><span class="err">u</span><span class="w"> </span><span class="err">liked</span><span class="w"> </span><span class="err">my</span><span class="w"> </span><span class="err">review</span><span class="w"> </span><span class="err">plz</span><span class="w"> </span><span class="err">ratemy</span><span class="w"> </span><span class="mi">1</span><span class="err">st</span><span class="w"> </span><span class="err">reviewread</span><span class="w"> </span><span class="err">more'</span><span class="p">],</span><span class="w">
 </span><span class="err">'img_url':</span><span class="w"> </span><span class="err">'https://myanimelist.cdn-dena.com/images/anime/</span><span class="mi">5</span><span class="err">/</span><span class="mi">71953</span><span class="err">.jpg'</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>The table illustrates an example of a user’s watched history, and the accompanying table displays ratings for 5 different anime given by 5 distinct users. The ratings are on a scale of 1 to 10, with 10 representing the highest level of favorability.</p>

<style>
    table {
  font-family: arial, sans-serif;
  border-collapse: collapse;
  width: 100%;
	}
    td, th {
        border: 1px solid #dddddd;}
</style>

<table>
  <thead>
    <tr>
      <th>Anime/score</th>
      <th>User1</th>
      <th>User2</th>
      <th>User3</th>
      <th>User4</th>
      <th>User5</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Fairy Tail</td>
      <td>10</td>
      <td>8</td>
      <td>10</td>
      <td>5</td>
      <td> </td>
    </tr>
    <tr>
      <td>Kimi no na wa</td>
      <td>10</td>
      <td>9</td>
      <td> </td>
      <td> </td>
      <td>4</td>
    </tr>
    <tr>
      <td>No game no life</td>
      <td>9</td>
      <td> </td>
      <td>9</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>Tokyo Ghoul</td>
      <td>7</td>
      <td> </td>
      <td>9</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>One Piece</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td>10</td>
      <td>9</td>
    </tr>
  </tbody>
</table>

<h4 id="how-does-this-recommender-system-works-">How does this recommender system works ?</h4>

<hr />

<p>Broadly speaking, there are two common algorithms used in the recommendation systems, collaborative filtering and content-based filtering. Collaborative filtering works by analyzing the viewing histories and ratings of multiple users. The system identifies users who have similar viewing and rating patterns and groups them into clusters. It then makes recommendations based on the preferences of users in the same cluster. For example, if many Marvel fans has enjoyed Tom and Jerry in their past, the system will likely recommend Tom and Jerry to those Marvel fans who has not watched it yet. In other words, it makes predictions based on the response of other users who share similar tastes. Content-based filtering, on the other hand, makes recommendations based on the content of the anime themselves. This approach involves analyzing the attributes, such as genre, theme, plot, character and story background,. The system then recommends anime to users based on their preferences for these attributes. For example, if a user enjoys watching romantic comedies with high school settings, the system will search for anime with similar attributes.</p>

<p>Both methods have their pros and cons. A major appeal of collaborative filtering is its flexibility in dealing with various data aspects. Collaborative filtering requires an active user data base with effective rating system and it does not work well with new user profiles or new anime with no ratings or reviews, known as cold start problem. It also relies heavily on the availability of user data, which can lead to sparsity and bias in data. A content based filtering is more friendly to new anime but is more exclusive to users’ own experience, and does not consider social factors such as popularity.</p>

<p>A more effective solution would be a hybrid system that combines both methods. While there are many blogs online discussing these two methods, few dive into how they work in practice. To begin with, it is important to understand the concept of the cold start problem and how it arises. We can conceptualize the rating system as a matrix, denoted as  <strong>R<sub>rating</sub></strong>, where the matrix contains the scores of all anime titles rated by all users. In our particular case, the matrix size will be 5000 shows by 5000 users, and each row will represent the ratings given by a user, with a value of 0 indicating that the user has not watched the anime.</p>

<div class="language-mathematica highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[[</span><span class="w"> </span><span class="m">10</span><span class="w">  </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">8</span><span class="w">   </span><span class="m">9</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">9</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">10</span><span class="w">  </span><span class="m">0</span><span class="w">   </span><span class="m">5</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">10</span><span class="w">   </span><span class="o">...</span><span class="p">]</span><span class="w">
 </span><span class="p">[</span><span class="w"> </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">9</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">8</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">4</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">8</span><span class="w">    </span><span class="o">...</span><span class="p">]</span><span class="w">
 </span><span class="p">[</span><span class="w"> </span><span class="m">9</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">8</span><span class="w">   </span><span class="m">9</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">    </span><span class="o">...</span><span class="p">]</span><span class="w">
 </span><span class="p">[</span><span class="w"> </span><span class="m">0</span><span class="w">   </span><span class="m">3</span><span class="w">   </span><span class="m">1</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">7</span><span class="w">   </span><span class="m">3</span><span class="w">   </span><span class="m">9</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">    </span><span class="o">...</span><span class="p">]</span><span class="w">
 </span><span class="p">[</span><span class="w"> </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">9</span><span class="w">   </span><span class="m">0</span><span class="w">   </span><span class="m">0</span><span class="w">    </span><span class="o">...</span><span class="p">]]</span><span class="w">
</span></code></pre></div></div>

<p>Let’s take a look at Row 5, which represents a new user. Typically, most users will have only watched a small fraction of the thousands of anime titles available on the platform. Assuming an average user spends about one hour per week on anime and each show has around 12 episodes of 20 minutes each, that would amount to roughly 152 hours per year, or about 20 shows per year. Consequently, the rating matrix will be extremely sparse, with most elements being zero. As the platform expands and more users join, the sparsity problem will continue to grow more severe.</p>

<p>Figure 1. Hybrid recommender work flow. A layout structure of my code.</p>

<h5><img src="https://live.staticflickr.com/65535/49755925832_dd80feb86a_b.jpg" width="100%" alt="zBbWj8p" /></h5>

<h5 id="a-collaborative-filtering-workflow">A: Collaborative Filtering Workflow</h5>

<p>The following image displays a user-item interaction matrix obtained from the ratings of six shows given by six users. Traditional collaborative filtering include measuring user similarity by calculating Pearson correlation or cosine similarity between normalized user vectors. Then combine the weighted average scores given by neighbors to estimate user’s score on the unseen show. A modern solution called matrix factorization, initially introduced by Simon Funk in 2006 in the Netflix Prize competition, has a better approach in handling this user-item matrix.  Instead of directly computing similarity between users, matrix factorization transforms the original matrix into two lower-dimensional matrices - one representing users and the other representing items using technique called singular value decomposition (SVD). These lower-dimensional matrices capture the latent factors or features that determine the user’s preference for a particular item, and can be used to predict missing ratings. Matrix factorization can provide more accurate predictions and is more scalable than traditional collaborative filtering methods.</p>

<p>Figure 2. <a href="https://datajobs.com/data-science-repo/Recommender-Systems-Netflix.pdf" title="MATRIX FACTORIZATION TECHNIQUES FOR RECOMMENDER SYSTEMS by Yehuda Koren and Chris Volinsky, published in 2009">User-item matrix decomposition</a> <img src="https://miro.medium.com/v2/resize:fit:1400/0*c4ajANtlyjvhwpgj.png" width="100%" alt="zBbWj8p" />
\(R=\begin{bmatrix}
5 &amp; 3 &amp; 0 &amp; 1 \\
4 &amp; 0 &amp; 0&amp; 1\\
1 &amp; 1 &amp; 0&amp; 5\\
0 &amp; 1 &amp; 5&amp; 4\\
\end{bmatrix}
\rightarrow\;\;\;\; U \times V\;\;
\rightarrow \;\;\hat{R}=\begin{bmatrix}
4.9&amp; 2.5 &amp;2.2 &amp;0.9 \\
4.2 &amp; 0.5 &amp; 3.4&amp; 1\\
1.5 &amp; 0.3 &amp; 4.5&amp; 3.9\\
1.1 &amp; 0.9 &amp; 4.9&amp; 3.2\\
\end{bmatrix}\)
Rating matrix R can be expressed as the product of two lower-dimensional matrices: U (user matrix) and V (item matrix). Assume k=3 latent factors, which means we assume that there are three underlying factors that determine how users rate the items (e.g. action vs romance vs adventure, animation quality vs length vs vocal, etc). We initialize U and V randomly, then use gradient descent to optimize the matrices based on the mean squared error loss between the predicted ratings and actual ratings in R. We can then use these matrices to predict the missing values in R, by taking the dot product of the corresponding user and item vectors.</p>

<h5 id="b-content-based-filtering-workflow">B: Content-based Filtering workflow</h5>

<p>A way to understand content-based filtering is to see it as a classification problem, where the system identifies relevant features in the content that are highly correlated with the user’s preferences. Recommendations are then made by comparing the user’s profile to the content of each item in the collection. The inputs are descriptions of anime stories and the goal is to identify the key topics or themes present in the text by extracting and grouping related keywords. TF-IDF is a common method used for text extraction that calculates the importance of a specific word in a given document. Words that appear frequently across all documents, such as “people” or “place,” are given a lower importance than words that appear infrequently but suggest a specific theme or topic, such as “wolf,” “magic,” or “spirit”.  In this project, 30 different anime topics were identified by extracting the key phrases from all the story descriptions. For instance, Topic 7 is centered on solving crimes, with Detective Conan being the most representative example.</p>

<p>Examples:</p>

<blockquote>
  <p>Topic #1: Special, release, air, recap, feature<br />
Topic #2: Earth, Planet, space, alien, ship<br />
Topic #3: High, school, junior, student, classmate<br />
Topic #4: Team, soccer, player, match, baseball<br />
Topic #5: Human, race, mankind, god, survive, extinct  <br />
Topic #6: Magic, witch, magician, kingdom, wish<br />
Topic #7: Mystery, solve, appear, past, shadow, kill<br />
Topic #8: Demon, king, hero, lord, seal, defeat, mission<br />
Topic #9: Love, feel, fall, relationship, confess, heart</p>
</blockquote>

<p>Then we can calculate an associated probability for each topic for a given anime.  For example</p>

<table>
  <thead>
    <tr>
      <th>Anime/Topics</th>
      <th>Topic 2</th>
      <th>Topic 3</th>
      <th>Topic 7</th>
      <th>Topic 8</th>
      <th>Topic 9</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Fairy Tail</td>
      <td>0.01</td>
      <td>0.12</td>
      <td>0.00</td>
      <td>0.67</td>
      <td>0.00</td>
    </tr>
    <tr>
      <td>Kimi no na wa</td>
      <td>0.11</td>
      <td>0.87</td>
      <td>0.02</td>
      <td>0.01</td>
      <td>0.54</td>
    </tr>
    <tr>
      <td>No game no life</td>
      <td>0.35</td>
      <td>0.23</td>
      <td>0.34</td>
      <td>0.01</td>
      <td>0.35</td>
    </tr>
    <tr>
      <td>Tokyo Ghoul</td>
      <td>0.02</td>
      <td>0.56</td>
      <td>0.76</td>
      <td>0.12</td>
      <td>0.00</td>
    </tr>
    <tr>
      <td>One Piece</td>
      <td>0.05</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.45</td>
      <td>0.00</td>
    </tr>
  </tbody>
</table>

<p>We can determine a user’s preference for different topics by taking an average of all the anime topics they have watched in the past. To generate recommendations, we then calculate the cosine similarity between the user’s topic matrix and the anime topic matrix. Finally, we combine the results obtained from the two recommenders.</p>

<h4 id="future-improvements">Future Improvements</h4>

<hr />

<p>Incorporating contextual information, such as location, country, ethnicity, age to enhance the accuracy of recommendations by tailoring them to the user’s current situation. Use deep learning techniques, such as neural networks, to create more sophisticated models that can capture more complex patterns and relationships between users and items.</p>

<h4 id="conclusion">Conclusion</h4>

<hr />

<p>Both methods have their strengths and limitations, and they can be combined to create a hybrid recommender system. The effectiveness of these methods can be further improved with advancements in natural language processing and machine learning techniques. Overall, recommender systems play a critical role in providing personalized experiences to users and are increasingly important in today’s digital landscape.</p>

<p>Reference</p>]]></content><author><name>penny</name></author><category term="supervised" /><category term="featured" /><summary type="html"><![CDATA[In recent years, anime has become increasingly popular worldwide, and the number of anime available online has grown exponentially. With so many options to choose from, it can be challenging to select the perfect one to suit their unique tastes. To address this issue, machine learning techniques has been used to develop personalized anime recommendation systems. By analyzing an individual’s viewing history and preferences, these systems can suggest anime titles that are more likely to appeal to them, based on factors such as genre, themes, and style. In this way, anime fans can discover new shows that are tailored to their specific interests, and spend less time searching. This article explores the use of machine learning in anime recommendation systems and discusses how they can enhance the anime viewing experience.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.befunky.com/images/wp/wp-2015-12-ghibli_parade__by_tenaga-d7gy63i.jpg" /><media:content medium="image" url="https://www.befunky.com/images/wp/wp-2015-12-ghibli_parade__by_tenaga-d7gy63i.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Amazon Illegal Mining Detection</title><link href="http://localhost:4000/illegal_mining/" rel="alternate" type="text/html" title="Amazon Illegal Mining Detection" /><published>2019-01-18T00:00:00-05:00</published><updated>2019-01-18T00:00:00-05:00</updated><id>http://localhost:4000/illegal_mining</id><content type="html" xml:base="http://localhost:4000/illegal_mining/"><![CDATA[<p>The Amazon rainforest, known for its rich biodiversity and vital role in regulating the Earth’s climate, has been facing a grave threat in the form of deforestation. This destructive practice has led to significant habitat destruction, biodiversity loss, and contributes to climate change. A key factor exacerbating this devastation is the sharp increase in illegal gold mining activities observed in the region over the past decade. Motivated by the soaring global gold price, individuals have engaged in unlawful mining practices within the Amazon rainforest, further exacerbating the environmental crisis.</p>

<p>Traditional labor-intensive methods involving the hiring of local citizens to spot illegal activities have proven to be costly and time-consuming. Fortunately, advancements in satellite technology have opened new avenues for detecting illegal mining activities using satellite images and employing machine learning techniques like image classification.</p>

<p>The primary objective of this project is to develop an algorithm for labeling unlabeled image chips. The primary focus is on detecting the occurrence of ‘artisanal mining,’ commonly referred to as illegal mining, among a set of 16 labels categorized into three main groups: <span style="color:SALMON">  atmospheric conditions</span>,  <span style="color:LightSkyBlue">common land uses</span> and <span style="color:Plum"> rare land uses</span>.  Image chips may receive none or more than one label from these groups.</p>

<p>The main objectives include:</p>

<ol>
  <li>
    <p><strong>Train a Model with Labeled Image Chips:</strong></p>

    <ul>
      <li>Develop an algorithm that effectively labels unlabeled satellite image chips, considering atmospheric conditions and land uses as label categories.</li>
    </ul>
  </li>
  <li>
    <p><strong>Detection of Artisanal Mining (Illegal Mining):</strong></p>

    <ul>
      <li>Create a model that reliably identifies the presence of ‘artisanal mining’ (illegal mining) as one of the rare labels among others.</li>
      <li>Differentiate between various classes of land cover and land use, emphasizing the detection of illegal mining activities.</li>
    </ul>
  </li>
  <li>
    <p><strong>Improved Understanding of Environmental Conditions:</strong></p>

    <ul>
      <li>
        <p>Utilize the model to enhance the understanding of environmental conditions, particularly in relation to deforestation and illegal mining activities on a global scale.</p>
      </li>
      <li>
        <p>Contribute to the identification and interpretation of patterns and causes of deforestation through the labeled satellite imagery.</p>
      </li>
    </ul>
  </li>
</ol>

<h5 id="challenges">Challenges</h5>

<p>The challenge of the project lies in addressing the highly imbalanced distribution of data labels among the 16 groups. Specifically, the difficulty arises from the fact that the ‘artisanal mine’ label constitutes less than 1% of the total population.</p>

<p float="left">
    <img src="https://live.staticflickr.com/65535/49626992868_557450fa33.jpg" width="50%" />  <img src="https://lh3.googleusercontent.com/jn0yWdVFz-RplTsir-DZcRs0UYWSouwjwhknKi3J6-f-o4TPWBlL2AGNsKQa0NIBkPJ66XfUfKrB03-BmHo8vDq2dJhf6lZLRuhQmluBukP2V979NtW7NZ-5odX8mhEru029s6PDy40" width="49%" /> <em>Left Figure 1: Examples of image chips with labels.   Right Figure 2: Frequency distribution of labels</em></p>

<p>Key Challenges:</p>

<ol>
  <li><strong>Blurry Image Challenge:</strong>
    <ul>
      <li>A significant amount of satellite image chips appears to be blurry. Therefore a dehazing function may be necessary to enhance the clarity of these images before feeding them into the model.</li>
      <li>Addressing blurry images is crucial for ensuring that the model can effectively learn and make accurate predictions, particularly in regions where haziness may impact the interpretability of features.</li>
    </ul>
  </li>
  <li><strong>Imbalanced Data Distribution:</strong>
    <ul>
      <li>Imbalanced data can lead to model bias, where the model may struggle to accurately identify and classify the minority class due to insufficient examples for learning.</li>
    </ul>
  </li>
  <li><strong>Risk of Misclassification:</strong>
    <ul>
      <li>The imbalanced distribution increases the risk of misclassification, especially for the minority class. The model may be heavily biased towards predicting the majority classes.</li>
    </ul>
  </li>
  <li><strong>Model Training Complexity:</strong>
    <ul>
      <li>The model needs to be trained to handle the rarity of the ‘artisanal mine’ label while maintaining performance across the other more prevalent labels.</li>
    </ul>
  </li>
  <li><strong>Data Augmentation and Sampling Strategies:</strong>
    <ul>
      <li>Balancing techniques, such as oversampling, undersampling, or the use of synthetic data, may need to be implemented to ensure fair learning across all classes.</li>
    </ul>
  </li>
</ol>

<h5 id="first-attempt">First Attempt</h5>

<p>My initial attempt involved using a random forest with computed features such as haziness, image contrast, and RGB color channels. However, this approach proved unsuccessful, as the model struggled to differentiate the most basic weather conditions. Consequently, attention shifted towards a convolutional neural network (CNN), known for its prowess in capturing and extracting essential local features for pattern and object identification. While successful in discerning weather labels and common land uses, the CNN faced challenges in predicting rare land use labels, despite extensive training. Even after implementing oversampling techniques, the model not only failed to improve accuracy but also exacerbated the recall score, resulting in misclassifications of other labels as mining activities.</p>

<p>In light of those challenges, I explored alternative approaches to improve model performance, particularly in predicting the 1% population representing rare land use categories.</p>

<ul>
  <li>Update computational power: use AWS GPU</li>
  <li>More advanced network designs</li>
  <li>Improve input image quality</li>
  <li>Rotate and flip images to increase the sample size</li>
</ul>

<h5 id="update-computational-power">Update computational power</h5>

<p>To harness the power of advanced hardware and accelerate the training process, an AWS GPU instance was utilized. The use of GPU computing combined with multi-processing technique allows for parallel processing and faster model training, enabling more efficient experimentation and optimization.   Additionally, cross-validation was implemented to continuously monitor the model’s performance across multiple iterations, ensuring that overfitting issues were identified and addressed promptly.</p>

<h5 id="advanced-network-designs---densenet">Advanced network designs - DenseNet</h5>

<p>To further improve the model’s performance and accuracy, a customized neural net model was implemented using DenseNet architecture. This deep neural network design introduces dense connections between layers, allowing for direct information flow and gradient propagation throughout the network. This architecture alleviates the vanishing gradient problem, encourages feature reuse and leads to better parameter efficiency and faster convergence during training.The Python package named Keras was employed to create and connect different neural network layers, with binary cross-entropy serving as the loss function.</p>

\[\text{Binary Crossentropy } = -\sum y_i log({\hat{y}}_i)+(1-y_i)log({1-\hat{y}}_i)\]

<p>, where y is the true probability and ŷ  is the predicted probability. The binary cross-entropy loss function is particularly effective in multi-class problems. In this context, let’s consider a three-class problem with   \(y_A=1, y_B=1, y_C=0\).  Suppose the model predicts \(ŷ_A=0.4, ŷ_B=0.7, ŷ_C=0.1\).  The loss is calculated as -(log(0.4)+log(0.7)+log(0.9)) = 0.60. As the predicted y of A and B approaches the correct answer 1, the loss function becomes small. Conversely, if predicted probability of A is close to zero, the loss becomes a large number. Same applies to \(y_C\) when it approaches to 0.</p>

<p>As a result, the new model benefits from requiring fewer parameters and faster convergence compared to CNN. It accelerates the training process and mitigates overfitting risk. This approach encourages the model to learn more robust and generalized features from the data, ultimately improving performance and accuracy.</p>

<h5 id="improve-image-quality">Improve image quality</h5>

<p>Satellite images often suffer from darkness and blurriness caused by atmospheric turbulence. However, by mitigating the effects of haze and improving image quality, we can enhance the performance of neural networks. Leveraging my understanding of atmospheric physics and conducting research on Google Scholars, I developed a dehaze function based on a <a href="https://www.robots.ox.ac.uk/~vgg/rg/papers/hazeremoval.pdf">paper</a> to address this challenge. Haze results from the scattering of light in the atmosphere before it reaches the camera. To estimate the intensity of scattered light, a constant value is derived by approximating the maximum pixel intensity within the darkest RGB channel. By utilizing OpenCV to convert images to a colorspace matrix and calculating the haze constant, we can restore the image by subtracting this value. As a result, the dehazed image appears brighter and exhibits better contrast, improving the quality of input data for neural networks.</p>

<p><img src="https://www.researchgate.net/profile/Seung_Won_Jung2/publication/291385074/figure/fig14/AS:320880610693124@1453515307125/Formation-of-a-hazy-image.png" width="80%" />
<em>Figure 3: Formation of a hazy image. Camera = Direct attenuation+Airlight</em></p>

<p><img src="https://live.staticflickr.com/65535/53340498376_0a75c43194_c.jpg" width="80%" />
<em>Figure4 : Examples of satellite image chips before and after haze removal</em></p>

<p>The impact of the dehazing process is evident, as it leads to a substantial improvement in image quality across most samples. Upon the application of the haze removal function, the image undergoes a remarkable transformation. The contrast is restored, bringing out more vivid and distinct features. The sharpness of objects is improved, and details that were previously obscured by haze become more visible. Colors, regaining vibrancy and accuracy, contribute to a clearer and more faithful representation of the scene. Overall, the haze removal function significantly elevates the image visibility and quality by reducing the impact of atmospheric interference.</p>

<p>The choice of F2 score as the performance metric is deliberate due to the uneven distribution of label classes, where recall takes precedence over precision. Recall measures the ability to capture all positive instances correctly. In the specific context of identifying labels associated with mining, a high recall implies the model’s effectiveness in detecting actual mining instances, thereby minimizing the occurrence of false negatives (missed mining instances). The F2 score, by assigning greater weight to recall, ensures that the model adeptly identifies as many positive instances as possible while maintaining a reasonable level of precision. This strategic emphasis aligns with the objective of optimizing performance in scenarios where missing positive instances carries a higher cost than false positives.</p>

<p><img style="width:80%;display:inline-block;" src="https://lh6.googleusercontent.com/P4qLeEVjt-Xh1vPbRrR12i6W43sfm03gZnA5x4NAoSkD4rkqx5cYPlmu9EplmXZDWM0TDudJzw-OOGQIOJ26T4VAFf2sD6isNkzWEyyZJOosXJpH5xXg581AVMpYm1B8j007y6BbdXk" /></p>

<p><em>Figure 5: F2 score before (purple) and after (blue) the haze removal function. Notice it dramatically improve the results for rare land use labels</em></p>

<h5 id="work-flow">Work Flow</h5>

<p><img src="https://live.staticflickr.com/65535/49627827697_8058d80cab_c.jpg" width="80%" alt="work flow" /></p>

<h5 id="model-performance">Model performance</h5>

<p>After training the DenseNet model on the dehazed image sets, the model was saved as “b01_dense121.h5”. This trained model was then utilized to generate labels for the previously unlabelled test set images. The model successfully identified several test photo chips as illegal mines, providing valuable insights into the presence of illegal mining activities in the dataset.</p>

<p><img src="https://live.staticflickr.com/65535/49627526151_a93a067f6d_c.jpg" width="100%" /><em>Figure 6. Examples from the test data that were marked as illegal mines with labels generated by the DenseNet model.</em></p>

<p>In summary, the project focused on developing a model to detect illegal mining and rare land use cases using satellite images. Several approaches were employed to address the challenges of imbalanced labels, low image quality, and underfitting. These approaches included improving computational power, rotating images of rare land use categories, using more advanced network designs like DenseNet, and enhancing input image quality through haze removal. The implementation of these approaches resulted in significant improvements in both precision and recall, particularly for the rare land use cases.</p>]]></content><author><name>penny</name></author><category term="classification" /><category term="supervised" /><category term="sticky" /><summary type="html"><![CDATA[The Amazon rainforest, known for its rich biodiversity and vital role in regulating the Earth’s climate, has been facing a grave threat in the form of deforestation. This destructive practice has led to significant habitat destruction, biodiversity loss, and contributes to climate change. A key factor exacerbating this devastation is the sharp increase in illegal gold mining activities observed in the region over the past decade. Motivated by the soaring global gold price, individuals have engaged in unlawful mining practices within the Amazon rainforest, further exacerbating the environmental crisis.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/1-mining.jpeg" /><media:content medium="image" url="http://localhost:4000/assets/images/1-mining.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>